import flet as ft

FORM_URL = ""
PROBABILITY_THRESHOLD = 0.95

def create_question_view(count):
    prob = 0.5
    return ft.View(
        f"/question/{count}",
        [
            ft.AppBar(title = ft.Text(f"Question {count}", size=50),
                        bgcolor = ft.Colors.BLUE_400,
                        toolbar_height = 66),
            ft.ProgressBar(
                value = prob / PROBABILITY_THRESHOLD,
                color = ft.Colors.BLUE_200,
                bar_height = 8),
            ft.Text("Ë≥™ÂïèÂÜÖÂÆπ", size=24),
            ft.ElevatedButton(
                "Â•Ω„Åç",
                color = ft.Colors.RED_400,
                bgcolor = ft.Colors.RED_100,
                icon = ft.CupertinoIcons.HEART_FILL,
                icon_color = ft.Colors.RED_400,
                style = ft.ButtonStyle(
                    text_style = ft.TextStyle(
                        size = 24
                    ),
                    icon_size = 24,
                    padding = 10
                )
                ),
            ft.ElevatedButton(
                "„Å©„Å°„Çâ„Åã„Å®„ÅÑ„Åà„Å∞Â•Ω„Åç",
                color = ft.Colors.PINK_400,
                bgcolor = ft.Colors.PINK_100,
                icon = ft.CupertinoIcons.HEART_FILL,
                icon_color = ft.Colors.PINK_400,
                style = ft.ButtonStyle(
                    text_style = ft.TextStyle(
                        size = 24
                    ),
                    icon_size = 24,
                    padding = 10
                )
                ),
            ft.ElevatedButton(
                "„Å©„Å°„Çâ„Å®„ÇÇ„ÅÑ„Åà„Å™„ÅÑ",
                color = ft.Colors.AMBER_600,
                bgcolor = ft.Colors.AMBER_100,
                icon = ft.CupertinoIcons.HEART_FILL,
                icon_color = ft.Colors.AMBER_600,
                style = ft.ButtonStyle(
                    text_style = ft.TextStyle(
                        size = 24
                    ),
                    icon_size = 24,
                    padding = 10
                )
                ),
            ft.ElevatedButton(
                "„Å©„Å°„Çâ„Åã„Å®„ÅÑ„Åà„Å∞Â•Ω„Åç„Åß„ÅØ„Å™„ÅÑ",
                color = ft.Colors.GREEN_400,
                bgcolor = ft.Colors.GREEN_100,
                icon = ft.CupertinoIcons.HEART_FILL,
                icon_color = ft.Colors.GREEN_400,
                style = ft.ButtonStyle(
                    text_style = ft.TextStyle(
                        size = 24
                    ),
                    icon_size = 24,
                    padding = 10
                )
                ),
            ft.ElevatedButton(
                "Â•Ω„Åç„Åß„ÅØ„Å™„ÅÑ",
                color = ft.Colors.BLUE_400,
                bgcolor = ft.Colors.BLUE_100,
                icon = ft.CupertinoIcons.HEART_FILL,
                icon_color = ft.Colors.BLUE_400,
                style = ft.ButtonStyle(
                    text_style = ft.TextStyle(
                        size = 24
                    ),
                    icon_size = 24,
                    padding = 10
                )
                ),
            ft.ElevatedButton(
                "„Çè„Åã„Çâ„Å™„ÅÑ",
                color = ft.Colors.BLACK,
                bgcolor = ft.Colors.GREY_100,
                icon = ft.CupertinoIcons.HEART_FILL,
                icon_color = ft.Colors.BLACK,
                style = ft.ButtonStyle(
                    text_style = ft.TextStyle(
                        size = 24
                    ),
                    icon_size = 24,
                    padding = 10
                )
                )
        ]
    )

def create_result_view(id):
    return ft.View(
        f"/result/{id}",
        [
            ft.AppBar(title = ft.Text(f"„ÅÇ„Å™„Åü„Å∏„ÅÆ„Åä„Åô„Åô„ÇÅ„ÅÆÊ•ΩÊõ≤„ÅØ„Åì„Å°„ÇâÔºÅ", size=50),
                        bgcolor = ft.Colors.BLUE_400,
                        toolbar_height = 66),
            ft.Text(f"„Çø„Ç§„Éà„É´ („Åä„Åô„Åô„ÇÅÂ∫¶ 95%)", size=50),
            ft.Text("„Ç≠„Éº„ÉØ„Éº„Éâ\n„Ç≠„Éº„ÉØ„Éº„Éâ„ÄÅ„Ç≠„Éº„ÉØ„Éº„Éâ", size=24),
            ft.ElevatedButton(
                "YouTube„ÅßË¶ã„Çã",
                color = ft.Colors.RED_400,
                bgcolor = ft.Colors.RED_100,
                icon = ft.CupertinoIcons.PLAY_RECTANGLE,
                icon_color = ft.Colors.RED_400,
                style = ft.ButtonStyle(
                    text_style = ft.TextStyle(
                        size = 24
                    ),
                    icon_size = 24,
                    padding = 10
                )
            ),
            ft.ElevatedButton(
                "Spotify„ÅßËÅ¥„Åè",
                color = ft.Colors.GREEN_400,
                bgcolor = ft.Colors.GREEN_100,
                icon = ft.CupertinoIcons.PLAY_CIRCLE,
                icon_color = ft.Colors.GREEN_400,
                style = ft.ButtonStyle(
                    text_style = ft.TextStyle(
                        size = 24
                    ),
                    icon_size = 24,
                    padding = 10
                )
            )
        ]
    )

def main(page: ft.Page):
    #„Éõ„Éº„É†ÁîªÈù¢„ÅÆË¶ã„ÅüÁõÆ„ÅÆË®≠ÂÆö
    home_view = ft.View(
        "/",
        [
            ft.AppBar(title = ft.Text("„Çπ„Éà„Çπ„Éàüéß„É¨„Ç≥„É°„É≥„ÉÄ„Éº", size=50),
                      center_title = True,
                      bgcolor = ft.Colors.BLUE_400,
                      toolbar_height = 66),
            ft.SafeArea(
                ft.Column([
                    ft.Column([
                        ft.Container(
                            content = ft.Text("„Çµ„Éñ„Çπ„ÇØ„ÅßËÅ¥„Åë„ÇãSixTONESÊ•ΩÊõ≤66Êõ≤„Åã„Çâ„ÅÇ„Å™„Åü„Å∏„Åä„Åô„Åô„ÇÅ„ÅÆÊõ≤„Çí„É¨„Ç≥„É°„É≥„ÉâÔºÅ", size=24),
                            alignment = ft.alignment.center,
                        ),
                        ft.Container(
                            content = ft.Text("Ê≥®ÊÑè‰∫ãÈ†Ö", size=32, color=ft.Colors.WHITE),
                            alignment = ft.alignment.center,
                            bgcolor = ft.Colors.RED_400,
                            padding = 10
                        ),
                        ft.Container(
                            content = ft.Text("‚Äª ÈùûÂÖ¨Âºè„ÅÆ„Éï„Ç°„É≥„Çµ„Ç§„Éà„Åß„Åô„ÄÇ\n‚Äª ÂΩì„Çµ„Ç§„Éà„ÅåÊèêÊ°à„Åô„ÇãÊ•ΩÊõ≤„ÇíÂøÖ„ÅöÊ∞ó„Å´ÂÖ•„Çã„Åì„Å®„Çí‰øùË®º„Åô„Çã„ÇÇ„ÅÆ„Åß„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ\n‚Äª „Ç¢„ÉÉ„Éó„Éá„Éº„Éà„ÅØÈ†ÜÊ¨°Ë°å„ÅÑ„Åæ„Åô„ÅåÂÄã‰∫∫ÈÅãÂñ∂„ÅÆ„Åü„ÇÅÂØæÂøú„Å´„ÅØÈôêÂ∫¶„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ", size=24, color=ft.Colors.WHITE),
                            alignment = ft.alignment.center,
                            bgcolor = ft.Colors.GREY,
                            padding = 10
                        ),
                        ft.Container(
                            content = ft.FilledButton(
                                content = ft.Text("Start!", size=50),
                                on_click = lambda _: page.go("/question/1"),
                                style = ft.ButtonStyle(
                                    shape = ft.CircleBorder(),
                                    padding = 50
                                )
                            ),
                            alignment = ft.alignment.center
                        )
                    ]),
                    ft.Container(
                        content = ft.TextButton(
                            content = ft.Text("„ÅîÊÑèË¶ã„Éª„ÅîË¶ÅÊúõ„ÅØ„Åì„Å°„Çâ„ÅÆ„Éï„Ç©„Éº„É†„Åã„Çâ", size=24, color=ft.Colors.BLUE_400),
                            url = FORM_URL,
                            style = ft.ButtonStyle(
                                bgcolor = ft.Colors.BLUE_100,
                                padding = 10
                            )
                        ),
                        alignment = ft.alignment.center
                    )],
                    alignment = ft.MainAxisAlignment.SPACE_BETWEEN
                ),
                expand=True,
            )]
    )

    #„É´„Éº„Éà„ÇíÂ§âÊõ¥„Åó„Åü„Å®„Åç„ÅÆÂãï‰Ωú
    def route_change(handler):
        troute = ft.TemplateRoute(handler.route)
        if troute.match("/"):
            page.views.clear()
            page.views.append(home_view)
        elif troute.match("/question/:count"):
            page.views.append(create_question_view(troute.count))
        elif troute.match("/result/:id"):
            page.views.append(create_result_view(troute.id))
        page.update()

    #Êàª„Çã„Å®„Åç„ÅÆÂãï‰Ωú
    def view_pop(view):
        print("view poped")
        page.views.pop()
        top_view = page.views[-1]
        page.go(top_view.route)

    page.title = "„Çπ„Éà„Çπ„Éà„É¨„Ç≥„É°„É≥„ÉÄ„Éº"
    page.on_route_change = route_change
    page.on_view_pop = view_pop
    page.views.clear()
    page.go(page.route)

ft.app(main, view=ft.AppView.WEB_BROWSER)
